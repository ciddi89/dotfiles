format = """
$username\
$hostname\
$directory\
$git_branch\
$git_state\
$git_status\
$package\
$docker_context\
$python\
$nodejs\
$line_break\        
$character"""

[directory]
read_only = " Ô†Ω"
truncation_length = 4
truncation_symbol = "‚Ä¶/"
style = "bold italic blue"

[character]
success_symbol = "[‚ûú](bold green)"
error_symbol = "[‚úó](bold red)"

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
disabled = false
show_always = true

[hostname]
ssh_only = false
format = 'on [$hostname](bold purple) '
trim_at = "."
disabled = false

[docker_context]
symbol = "Ôåà "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[git_branch]
symbol = "Ôêò "

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)" 
modified = "[${count}+](yellow)" 
deleted =  "[${count}-](red)" 
conflicted =  "[${count}~](red)" 
ahead = "‚á°${count}"
behind = "‚á£${count}"
untracked = "[${count}?](blue)" 
staged = "[${count}+](green)" 

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"	
revert = "revert"	
cherry_pick = "cherry"
bisect = "bisect"	
am = "am"	
am_or_rebase = "am/rebase"

[package]
symbol = "Ô£ñ "

[nodejs]
format = "via [Ô¢ò Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[python]
symbol = "üêç "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"
